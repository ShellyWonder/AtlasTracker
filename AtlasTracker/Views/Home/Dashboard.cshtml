@model AtlasTracker.Models.ViewModels.DashboardViewModel
@using Microsoft.AspNetCore.Identity
@using AtlasTracker.Services.Interfaces
@using AtlasTracker.Models.Enums
@inject UserManager<BTUser> UserManager

@inject IBTProjectService ProjectService


@{
    Layout = "_newLayout";
    BTUser btUser = await UserManager.GetUserAsync(User);
}
<header class="page-header">
    <h2>Dashboard</h2>

    <div class="right-wrapper text-end">
        <ol class="breadcrumbs pe-3">
            <li>
                
                    <i class="bx bx-home-alt"></i>
                </a>
            </li>

            <li> <a asp asp-controller="Home" asp-action="Landing"><span>Landing</span></a></li>

            <li><span>Dashboard</span></li>

        </ol>

        @*<a class="sidebar-right-toggle" data-open="sidebar-right"><i class="fas fa-chevron-left"></i></a>*@
    </div>
</header>

<!-- start: page -->
<div class="row">
    <div class="col-lg-6 mb-3">
        <section class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-xl-8">
                        <div class="chart-data-selector" id="salesSelectorWrapper">


                            <div id="salesSelectorItems" class="chart-data-selector-items mt-3">
                                <div class="row">
                                    <div class="col-6">
                                        <div class="card-body">
                                            <h5>Tickets by Status</h5>
                                            <p></p>
                                            <!-- ChartJS: Pie/Doughnut -->
                                            <div class="col-md-12">
                                                <!-- Chart.js Canvas Tag -->
                                                <canvas id="donutChart"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="card-body">
                                            <h5>Tickets by Priority</h5>
                                            <p></p>
                                            <!-- ChartJS: Pie/Doughnut -->
                                            <div class="col-md-12">
                                                <!-- Chart.js Canvas Tag -->
                                                <canvas id="pieChart"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </section>
    </div>
    <div class="col-lg-6">
        <div class="row mb-3">
            <div class="col-xl-6">
                @*All projects widget*@
                <section class="card card-featured-left card-featured-primary mb-3">
                    <div class="card-body">
                        <div class="widget-summary">
                            <div class="widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon bg-primary">
                                    <i class="fbx bx-coin-stack"></i>
                                </div>
                            </div>
                            <div class="widget-summary-col">
                                <div class="summary">
                                    <h4 class="title">All Projects</h4>
                                    <div class="info">
                                        <strong class="amount">@Model.Projects.Count</strong>
                                        @*<span class="text-primary">See All Project</span>*@
                                    </div>
                                </div>
                                <div class="summary-footer">
                                    <a class="text-muted text-uppercase" asp-action="AllProjects" asp-controller="Projects">See All Projects</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            @*All Tickets widget*@
            <div class="col-xl-6">
                <section class="card card-featured-left card-featured-tertiary mb-3">
                    <div class="card-body">
                        <div class="widget-summary">
                            <div class="widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon bg-tertiary">
                                    <i class="bx bx-file"></i>
                                </div>
                            </div>
                            <div class="widget-summary-col">
                                <div class="summary">
                                    <h4 class="title">All Tickets</h4>
                                    <div class="info">
                                        <strong class="amount">@Model.Tickets.Count</strong>
                                    </div>
                                </div>
                                <div class="summary-footer">
                                    <a class="text-muted text-uppercase" asp-action="AllTickets" asp-controller="Tickets">See All Tickets</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
        @*Team Members Drop Down*@
        <div class="row row-flex">
            <div class="col-xl-6">
                <section class="card mb-3">
                    <header class="card-header">
                        <div class="card-actions">
                            <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                            <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                        </div>

                        <h2 class="card-title">
                            <span class="badge badge-primary font-weight-normal va-middle p-2 me-e">@Model.Members.Count()</span>
                            <span class="va-middle">Team Members</span>
                        </h2>
                    </header>
                    <div class="card-body">
                        <div class="content">
                            <ul class="simple-user-list">
                                @foreach (BTUser member in Model.Members!)
                                {
                                    <li>
                                        <span class="">@member.FullName</span>
                                        <span class="" style="font-size:x-small">[@((await UserManager.GetRolesAsync(member)).FirstOrDefault())]</span>
                                    </li>
                                }
                            </ul>
                            <hr class="dotted short">
                            <div class="card-footer">
                                <small class="text-muted">Last updated 3 mins ago</small>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            @*MyProfile*@
            <div class="col-xl-6">
                <section class="card">
                    <header class="card-header">
                        <div class="card-actions">
                            <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                            <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                        </div>

                        <h2 class="card-title">My Profile</h2>
                    </header>
                    <div class="card-body">
                        <section class="card card-group">
                            <header class="card-header bg-primary w-100">

                                <div class="widget-profile-info">
                                    <div class="profile-picture">
                                        @if (btUser.AvatarData != null)
                                        {
                                            <img id="avatarFileData" class="img-fluid img-thumbnail rounded" style="width:300px;height:300px;" src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarData))" alt="" />
                                        }
                                        else
                                        {
                                            <img id="avatarFileData" class="img-fluid img-thumbnail rounded" style="width:300px;height:300px;" src="/img/avatar_icon.png" alt="Avatar Icon" />
                                        }
                                        <div class="profile-info">
                                            <h4 class="name font-weight-semibold">@btUser.FullName</h4>

                                            <h5 class="role">@((await UserManager.GetRolesAsync(btUser)).FirstOrDefault())</h5>
                                            <div class="profile-footer ">
                                                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Edit Profile</a>

                                            </div>

                                        </div>
                                    </div>
                                </div>

                            </header>

                        </section>

                    </div>
                </section>
            </div>
        </div>
    </div>
</div>



<div class="row pt-4 mt-2">

    <div class="col-lg-12 ">
        <section class="card">
            <header class="card-header card-header-transparent">
                <div class="card-actions">
                    <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                    <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                </div> 
            </header>
            <div class="card-body">
                <div class="timeline timeline-simple mt-3 mb-3">
                    <div class="tm-body">
                        <div class="tm-title">
                            <h5 class="m-0 pt-2 pb-2 text-dark font-weight-semibold text-uppercase">Project Activity</h5>
                        </div>
                        <ol class="tm-items">
                            <li>
                                <div class="tm-box">
                                    <p class="text-muted mb-0"></p>
                                    <p>
                                        <div class="card-body">
                                            <table class="table table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>Title</th>
                                                        <th>Start Date</th>
                                                        <th>Deadline</th>
                                                        <th>Priority</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (Project project in Model.Projects!.OrderByDescending(d => d.CreatedDate).Take(10))
                                                    {
                                                        @if (!(project.Archived)
                                                       || (User.IsInRole(nameof(BTRole.Admin))
                                                       || (User.IsInRole(nameof(BTRole.Developer))
                                                       || (User.IsInRole(nameof(BTRole.ProjectManager))))))
                                                        {
                                                            <tr>
                                                                <td><a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id">@project.Name</a></td>
                                                                <td>@project.CreatedDate.DateTime.ToString("MM/dd/yyyy")</td>
                                                                <td>@project.EndDate.DateTime.ToString("MM/dd/yyyy")</td>
                                                                <td>@project.ProjectPriority!.Name</td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>

                                        </div>
                                    </p>
                                </div>
                            </li>
                        </ol>
                    </div>
                </div>
            </div>
        </section>
    </div>

</div>
<div class="row pt-4 mt-1">

    <div class="col-lg-12">
        <section class="card">
            <header class="card-header card-header-transparent">
                <div class="card-actions">
                    <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                    <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                </div> 
            </header>
            <div class="card-body">
                <div class="timeline timeline-simple mt-3 mb-3">
                    <div class="tm-body">
                        <div class="tm-title">
                            <h5 class="m-0 pt-2 pb-2 text-dark font-weight-semibold text-uppercase">Ticket Activity</h5>
                        </div>
                        <ol class="tm-items">
                            <li>
                                <div class="tm-box">
                                    <p class="text-muted mb-0"></p>
                                    <p>
                                        <div class="card-body">
                                            <table class="table table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>Title</th>
                                                        <th>Status</th>
                                                        <th>Priority</th>
                                                        <th> Created Date</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (Ticket ticket in Model.Tickets!.OrderByDescending(d => d.CreatedDate).Take(10))
                                                    {
                                                        @if (!(ticket.Archived || ticket.ArchivedByProject)
                                                       && ticket.DeveloperUserId == btUser.Id
                                                       || (User.IsInRole(nameof(BTRole.Admin)) || User.IsInRole(nameof(BTRole.ProjectManager))))
                                                        {
                                                            <tr>
                                                                <td><a asp-controller="Tickets" asp-action="Details" asp-route-id="@ticket.Id">@ticket.Title</a></td>
                                                                <td>@ticket.Status!.Name</td>
                                                                <td>@ticket.TicketPriority!.Name</td>
                                                                <td>@ticket.CreatedDate.DateTime.ToString("MM/dd/yyyy")</td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>

                                        </div>
                                    </p>
                                </div>
                            </li>
                        </ol>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>
@section scripts{
<!-- *** Begin Chart JS Pie/Donut *** -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
<script>

    var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
    var donutData = {
        labels: [
            '@nameof(BTTicketStatus.Development)',
            '@nameof(BTTicketStatus.New)',
            '@nameof(BTTicketStatus.Resolved)',
            '@nameof(BTTicketStatus.Testing)'
        ],
        datasets: [
            {
                data: [
                    @Model.Tickets.Where(t=> t.Status.Name == nameof(BTTicketStatus.Development)).Count(),
                    @Model.Tickets.Where(t=> t.Status.Name ==nameof(BTTicketStatus.New)).Count(),
                    @Model.Tickets.Where(t=> t.Status.Name ==nameof(BTTicketStatus.Resolved)).Count(),
                    @Model.Tickets.Where(t=> t.Status.Name ==nameof(BTTicketStatus.Testing)).Count()
                ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)'
                ]
            }
        ]
    };

    var donutOptions = {
        maintainAspectRatio: false,
        responsive: true,
    };
    //Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below.
    new Chart(donutChartCanvas, {
        type: 'doughnut',
        data: donutData,
        options: donutOptions
    });
</script>
<!-- *** End Chart JS Donut *** -->
<!-- *** Begin Chart JS Pie *** -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
<script>

    var pieChartCanvas = $('#pieChart').get(0).getContext('2d');
    var pieData = {
        labels: [
            '@nameof(BTTicketPriority.Low)',
            '@nameof(BTTicketPriority.Medium)',
            '@nameof(BTTicketPriority.High)',
            '@nameof(BTTicketPriority.Urgent)'
        ],
        datasets: [
            {
                data: [
                    @Model.Tickets.Where(t=> t.TicketPriority.Name == nameof(BTTicketPriority.Low)).Count(),
                    @Model.Tickets.Where(t=> t.TicketPriority.Name ==nameof(BTTicketPriority.Medium)).Count(),
                    @Model.Tickets.Where(t=> t.TicketPriority.Name ==nameof(BTTicketPriority.High)).Count(),
                    @Model.Tickets.Where(t=> t.TicketPriority.Name ==nameof(BTTicketPriority.Urgent)).Count()
                ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)'
                ]
            }
        ]
    };

    var pieOptions = {
        maintainAspectRatio: false,
        responsive: true,
    };
    //Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below.
    new Chart(pieChartCanvas, {
        type: 'pie',
        data: pieData,
        options: pieOptions
    });
</script>
<!-- *** End Chart JS Donut *** -->






<script>
    var message = '@(ViewBag.SwalMessage)';
    if(!message.includes("error")&& message != '')
    {
        Swal.fire({
            icon: 'success',
            title: message,
            showConfirmButton: true
        })
    }else if(message.includes("error")){
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: message
        })
    }
</script>
}