@model AtlasTracker.Models.Project
@using AtlasTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using AtlasTracker.Models.Enums

@inject IBTProjectService ProjectService;
@inject UserManager<BTUser> UserManager;
@inject IBTHistoryService HistoryService;

@{
    ViewData["Title"] = "Details";

    BTUser btUser = await UserManager.GetUserAsync(User);
    BTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);

    //Progress bar variables for future use
    //List<Ticket> resolvedTickets = Model.Tickets!.Where(t => t.Status!.Name == nameof(BTTicketStatus.Resolved)).ToList();
    //List<Ticket> Alltickets = Model.Tickets!.ToList();

}

<h1>Project Details</h1>

<div class="right-wrapper text-end">
</div>
<div class="row">
    <div class="col-6">
        <section class="card">
            <header class="card-header">
                <div class="card-actions">
                    <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                    <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                </div> <h2 class="card-title">General Project Description</h2>
            </header>
            <div class="card-body">
                <h5>@Model!.Name</h5>

                <p>@Model.Description</p>
                <div class="progress-container progress-info m-b-25">
                    <span class="progress-badge" style="font-size:small">Project Status</span>
                    <div class="progress">
                        @{
                            //commented code for future use
                            //int resolved = resolvedTickets.Count();
                            //int all = Alltickets.Count();
                            //var percent = Math.Round(((double)resolvedTickets.Count() / Alltickets.Count())) * 100;

                            var start = Model.StartDate.DateTime;
                            var end = Model.EndDate.DateTime;
                            var today = DateTime.Now;
                            var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                        }

                        <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                            @* Use Progress Bar code variable here *@
                            <span class="progress-value">@percent%</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
    <div class="col-6">
        <section class="card">
            <header class="card-header">
                <div class="card-actions">
                    <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                    <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                </div> <h2 class="card-title">General Project Stats</h2>
            </header>
            <div class="card-body">

                <ul class=" list-unstyled basic-list">
                    <li>Start Date: <span class="text-light">@Model.StartDate.ToString("dd MM, yyyy")</span></li>
                    <li>Deadline: <span class="text-light">@Model.EndDate.ToString("dd MM, yyyy")</span></li>
                    <li>Priority: <span class="text-light">@Model.ProjectPriority?.Name</span></li>

                    @if (percent == 100)
                    {
                        <li>Status:<span class="text-light">Completed</span></li>
                    }
                    else
                    {
                        <li>Status:<span class="text-light"> Active </span></li>
                    }
                    @if (User.IsInRole(nameof(BTRole.Admin)) || User.IsInRole(nameof(BTRole.ProjectManager)))
                    {
                        <a class="btn btn-xs alert-primary me-2" style="font:small" asp-action="Edit" asp-controller="Projects" asp-route-id="@Model.Id">Edit</a>
                    }
                </ul>

            </div>
        </section>
    </div>
</div>
<div class="row">
    <div class="col-6 ">
        <section class="card">
            <header class="card-header">
                <div class="card-actions">
                    <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                    <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                </div> <h2 class="card-title">Project Manager</h2>
            </header>
            <div class="card-body">

                @if (projectManager != null)
                {
                    <div>
                        @if (projectManager.AvatarData != null)
                        {
                            <img class="rounded-circle" style="width:60px;height:60px;" src="data:image/*;base64,@(Convert.ToBase64String(projectManager.AvatarData))" alt="User Avatar Image">
                        }
                        else
                        {
                            <img class="rounded-circle" style="width:60px;height:60px;" src="/img/avatar_icon.png" alt="User Avatar Default Image">
                        }
                        <div>
                            <h5>@projectManager.FullName</h5>
                            <span>@projectManager.Email</span>
                            <p class="text-muted m-b-0">Project Manager</p>
                            @if (User.IsInRole(nameof(BTRole.Admin)) || (btUser.Id == projectManager.Id))
                            {
                                <a class="btn btn-xs alert-primary" style="font:small" asp-controller="Projects" asp-action="AssignMembers" asp-route-Id="@Model.Id">Manage Team</a>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div>
                        <img class="rounded-circle" style="width:60px;height:60px;" src="/img/avatar_icon.png" alt="User Avatar Default Image">
                        <div class="wid-u-info">
                            <h5 class="text-muted m-b-0">Not Assigned</h5>
                            @if (User.IsInRole(nameof(BTRole.Admin)))
                            {
                                <span><a asp-action="AssignPM" asp-controller="Projects" asp-route-projectId="@Model.Id" class="btn btn-xs btn-outline-info">Assign PM</a></span>
                            }
                        </div>
                    </div>
                }
            </div>
        </section>
    </div>

    <div class="col-6">
        <section class="card mb-3">
            <header class="card-header">
                <div class="card-actions">
                    <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                    <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                </div>

                <h2 class="card-title">
                    <span class="badge badge-primary font-weight-normal va-middle p-2 me-e">@Model.Members!.Count()</span>
                    <span class="va-middle">Project Members</span>
                </h2>
            </header>
            <div class="card-body">
                <div class="content">
                    <ul class="simple-user-list">
                        @foreach (BTUser member in Model.Members!)
                        {
                            <li>
                                <span class="">@member.FullName</span>
                                <span class="" style="font-size:x-small">[@((await UserManager.GetRolesAsync(member)).FirstOrDefault())]</span>
                            </li>
                        }
                    </ul>

                </div>
            </div>
            <div class="card-footer">
            </div>
        </section>
    </div>
</div>
<div class="row mb-3">
    <div class="col-12">
        <section class="card">
            <header class="card-header">
                <div class="card-actions">
                    <a href="#" class="card-action card-action-toggle" data-card-toggle></a>
                    <a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
                </div> <h2 class="card-title">Project Activity</h2>
            </header>
            <div class="card-body bg-dark text-light">
                @foreach (TicketHistory history in await HistoryService.GetProjectTicketsHistoriesAsync(Model.Id, btUser.CompanyId))
                {
                    <div class="">
                        <span class="date" style="font-weight:bold">@history.CreatedDate?.ToString("dd MMM yyyy")</span>
                        <h4>@history.Description</h4>
                        <span>By: <a href="" title="@history.User!.FullName">@history.User.FullName</a></span>
                        <div class="">
                            @if (history.Description!.Contains("New Ticket Created"))
                            {
                                <p>The ticket was added.</p>
                            }
                            else if (history.PropertyName!.Equals("TicketComment") || history.PropertyName.Equals("TicketAttachment"))
                            {
                                <p>A <b>@history.PropertyName</b>  was added.</p>
                            }
                            else
                            {
                                <p>The ticket <b>@history.PropertyName</b> was added</p>
                                <p>@($"Previous {history.PropertyName}:  ") <span style="color:red">@history.OldValue</span></p>
                                <p>@($"Current {history.PropertyName}:  ") <span style="color:green">@history.NewValue</span></p>
                            }
                        </div>
                    </div>
                    <hr />
                }
            </div>
        </section>

    </div>
</div>

<div class="right-wrapper text-end">
</div>
<div class="row">
<div class="col">
<section class="card">
<header class="card-header">
<div class="card-actions">
<a href="#" class="card-action card-action-toggle" data-card-toggle></a>
<a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
</div> <h2 class="card-title">Project Tickets</h2>
</header>
<div class="card-body">
    <div class="table-responsive">
    <table class="table table-bordered table-striped mb-0" id="datatable-tabletools">
       <thead>
                            <tr>
                                <th>Title</th>
                                <th>Developer</th>
                                <th>Status</th>
                                <th>Priority</th>
                                <th>Date Created</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ticket in Model.Tickets!.OrderByDescending(d => d.CreatedDate))
                            {
                                <tr>
                                    <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><strong>@ticket.Title</strong></a> </td>
                                    <td>
                                        @if (ticket.DeveloperUserId != null)
                                        {
                                            @ticket.DeveloperUser?.FullName
                                        }
                                        else
                                        {
                                            if (User.IsInRole(nameof(BTRole.Admin)) || User.IsInRole(nameof(BTRole.ProjectManager)))
                                            {
                                                <a asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-Id="@ticket.Id">Assign Dev</a>
                                            }
                                        }
                                    </td>
                                    @if (ticket.Status!.Name == "New")
                                    {
                                        <td>@ticket.Status.Name </td>
                                    }
                                    else
                                    {
                                        <td>@ticket.Status.Name </td>
                                    }
                                    <td>@ticket.TicketPriority!.Name </td>
                                    <td>@ticket.CreatedDate.ToString("MM-dd-yyyy")</td>
                                    <td>
                                        <a class="me-1"  asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id">Details</a>

                                        @if (ticket.DeveloperUserId == btUser.Id || ticket.OwnerUserId == btUser.Id || (projectManager?.Id == btUser.Id) || User.IsInRole(nameof(BTRole.Admin)))
                                        {
                                            <a class="me-1" asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id">Edit</a>
                                        }
                                        @if (User.IsInRole("Admin") || (projectManager?.Id == btUser.Id))
                                        {
                                            <a class="me-1" asp-action="Archive" asp-route-id="@ticket.Id">Archive</a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>

</div>



